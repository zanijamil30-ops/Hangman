# -*- coding: utf-8 -*-
"""Hangman.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10zo378HU1Wwy6tuGllrqvAoNordjv7iv
"""

import random

# ------------------------------
# HANGMAN GAME (SIMPLE VERSION)
# ------------------------------

# Step 1: List of possible words
words = ["python", "hangman", "developer", "artificial", "intelligence", "machine", "learning"]

# Step 2: Choose a random word
word = random.choice(words)
guessed_letters = []
attempts = 6  # total lives

print("🎯 Welcome to Hangman!")
print("Guess the word, one letter at a time.")

# Step 3: Game loop
while attempts > 0:
    # Display current progress
    display_word = ''.join([letter if letter in guessed_letters else '_' for letter in word])
    print(f"\nWord: {display_word}")
    print(f"Attempts left: {attempts}")
    print(f"Guessed letters: {', '.join(guessed_letters) if guessed_letters else 'None'}")

    # Step 4: Take input
    guess = input("Enter a letter: ").lower()

    # Input validation
    if not guess.isalpha() or len(guess) != 1:
        print("⚠️ Please enter a single valid letter.")
        continue

    if guess in guessed_letters:
        print("⚠️ You already guessed that letter.")
        continue

    guessed_letters.append(guess)

    # Step 5: Check guess
    if guess in word:
        print("✅ Good guess!")
        if all(letter in guessed_letters for letter in word):
            print(f"\n🎉 Congratulations! You guessed the word: {word}")
            break
    else:
        attempts -= 1
        print("❌ Wrong guess!")

# Step 6: End of game
if attempts == 0:
    print(f"\n💀 Game Over! The word was: {word}")

import random

stages = [
    # 0 wrong guesses (empty scaffold)
    """
     _______
    |/      |
    |
    |
    |
    |
    |
    |___
    """,
    # 1 wrong - head
    """
     _______
    |/      |
    |      (_)
    |
    |
    |
    |
    |___
    """,
    # 2 wrong - body
    """
     _______
    |/      |
    |      (_)
    |       |
    |       |
    |
    |
    |___
    """,
    # 3 wrong - one arm
    """
     _______
    |/      |
    |      (_)
    |      \\|
    |       |
    |
    |
    |___
    """,
    # 4 wrong - two arms
    """
     _______
    |/      |
    |      (_)
    |      \\|/
    |       |
    |
    |
    |___
    """,
    # 5 wrong - one leg
    """
     _______
    |/      |
    |      (_)
    |      \\|/
    |       |
    |      /
    |
    |___
    """,
    # 6 wrong - two legs (full hangman)
    """
     _______
    |/      |
    |      (_)
    |      \\|/
    |       |
    |      / \\
    |
    |___
    """,
]

words = ["python", "hangman", "developer", "machine", "learning", "notebook"]
word = random.choice(words)
guessed = set()
wrong = set()
max_wrong = len(stages) - 1

print("🎯 Welcome to Hangman with ASCII art!")
print("Guess the word, one letter at a time.\n")

while True:
    # Display stage according to number of wrong guesses
    print(stages[len(wrong)])

    # Display partially guessed word
    display = ' '.join([c if c in guessed else '_' for c in word])
    print("Word: ", display)
    print(f"Wrong guesses ({len(wrong)}/{max_wrong}): {', '.join(sorted(wrong)) if wrong else 'None'}")

    if all(c in guessed for c in word):
        print("\n🎉 You won! The word was:", word)
        break

    if len(wrong) >= max_wrong:
        print("\n💀 Game over! The word was:", word)
        break

    guess = input("Enter a letter: ").strip().lower()
    if not guess.isalpha() or len(guess) != 1:
        print("Please enter a single letter.\n")
        continue
    if guess in guessed or guess in wrong:
        print("You already tried that letter.\n")
        continue

    if guess in word:
        guessed.add(guess)
        print("Good guess!\n")
    else:
        wrong.add(guess)
        print("Wrong guess!\n")